import pokemon_openai

import flask
from flask import Flask, request, jsonify

app = flask.Flask(__name__)
app.config["DEBUG"] = True


class PokemonOpenAI:
    def get_response_openai(self, text):
        return {'pokemon_name': 'Pokemon'}


@app.route('/monitoring', methods=['GET'])
def monitoring():
    """Endpoint for monitoring the status of the service.

    Returns:
        JSON: A JSON response indicating that the service is alive.
    """
    return jsonify({"message:": "I'm alive. :)"})


@app.route('/structured', methods=["POST"])
def structured_data():
    """Endpoint for processing structured data about Pokémon.

    This endpoint takes structured JSON data containing text describing a Pokémon and
     returns a response generated by the Pokemon OpenAI model.

    Returns:
        Structured JSON: A JSON response containing the generated structured response.
    """
    try:
        data = request.get_json()
        if data is None or data == {}:
            raise ValueError("No data!")
        if "text" not in data:
            raise ValueError("No key 'text' in data JSON")
    except ValueError as e:
        return jsonify({"error": "Invalid input", "details": str(e)}), 400
    except Exception as e:
        return jsonify({"error": "Unexpected exception", "details": str(e)}), 400

    try:
        response = pokemon_openai.get_response_openai(data["text"])
    except Exception as e:
        return jsonify({"error": "Fail response from Pokémon OpenAI", "details": str(e)}), 500

    return jsonify(response)


if __name__ == '__main__':
    app.run(host="0.0.0.0", port=8080)
